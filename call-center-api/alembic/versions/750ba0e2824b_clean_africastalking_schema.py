"""clean_africastalking_schema

Revision ID: 750ba0e2824b
Revises: 
Create Date: 2025-10-15 12:22:10.175678

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '750ba0e2824b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('personal_phone', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('designation', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_status'), 'users', ['status'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_table('agents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('agent_type', sa.String(), nullable=True),
    sa.Column('group', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('last_status_change', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_logged_in', sa.Boolean(), nullable=True),
    sa.Column('login_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_calls_today', sa.Integer(), nullable=True),
    sa.Column('answered_calls_today', sa.Integer(), nullable=True),
    sa.Column('missed_calls_today', sa.Integer(), nullable=True),
    sa.Column('total_talk_time_today', sa.Integer(), nullable=True),
    sa.Column('total_calls', sa.Integer(), nullable=True),
    sa.Column('answered_calls', sa.Integer(), nullable=True),
    sa.Column('missed_calls', sa.Integer(), nullable=True),
    sa.Column('total_talk_time', sa.Integer(), nullable=True),
    sa.Column('average_call_duration', sa.Float(), nullable=True),
    sa.Column('assigned_queues', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('skills', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('languages', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('max_concurrent_calls', sa.Integer(), nullable=True),
    sa.Column('auto_answer', sa.Boolean(), nullable=True),
    sa.Column('call_recording_enabled', sa.Boolean(), nullable=True),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('supervisor_id', sa.UUID(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['supervisor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_agents_is_logged_in'), 'agents', ['is_logged_in'], unique=False)
    op.create_index(op.f('ix_agents_status'), 'agents', ['status'], unique=False)
    op.create_table('leads',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('customer_name', sa.String(), nullable=False),
    sa.Column('associate_agent', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('branch', sa.String(), nullable=True),
    sa.Column('latest_loan', sa.String(), nullable=True),
    sa.Column('business_address', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('priority', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('assigned_agent_id', sa.UUID(), nullable=True),
    sa.Column('assigned_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('lead_score', sa.Integer(), nullable=True),
    sa.Column('estimated_value', sa.Float(), nullable=True),
    sa.Column('probability', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('custom_fields', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('preferred_contact_method', sa.String(), nullable=True),
    sa.Column('best_time_to_call', sa.String(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=True),
    sa.Column('do_not_call', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assigned_agent_id'], ['agents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_leads_assigned_agent_id'), 'leads', ['assigned_agent_id'], unique=False)
    op.create_index(op.f('ix_leads_priority'), 'leads', ['priority'], unique=False)
    op.create_index(op.f('ix_leads_source'), 'leads', ['source'], unique=False)
    op.create_index(op.f('ix_leads_status'), 'leads', ['status'], unique=False)
    op.create_table('calls',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('at_session_id', sa.String(), nullable=True),
    sa.Column('at_call_id', sa.String(), nullable=True),
    sa.Column('caller_number', sa.String(), nullable=False),
    sa.Column('callee_number', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('direction', sa.String(), nullable=False),
    sa.Column('call_start', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('call_answered', sa.DateTime(timezone=True), nullable=True),
    sa.Column('call_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_duration', sa.Integer(), nullable=True),
    sa.Column('agent_id', sa.UUID(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('lead_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_calls_agent_id'), 'calls', ['agent_id'], unique=False)
    op.create_index(op.f('ix_calls_at_call_id'), 'calls', ['at_call_id'], unique=False)
    op.create_index(op.f('ix_calls_at_session_id'), 'calls', ['at_session_id'], unique=True)
    op.create_index(op.f('ix_calls_call_start'), 'calls', ['call_start'], unique=False)
    op.create_index(op.f('ix_calls_callee_number'), 'calls', ['callee_number'], unique=False)
    op.create_index(op.f('ix_calls_caller_number'), 'calls', ['caller_number'], unique=False)
    op.create_index(op.f('ix_calls_direction'), 'calls', ['direction'], unique=False)
    op.create_index(op.f('ix_calls_lead_id'), 'calls', ['lead_id'], unique=False)
    op.create_index(op.f('ix_calls_status'), 'calls', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_calls_status'), table_name='calls')
    op.drop_index(op.f('ix_calls_lead_id'), table_name='calls')
    op.drop_index(op.f('ix_calls_direction'), table_name='calls')
    op.drop_index(op.f('ix_calls_caller_number'), table_name='calls')
    op.drop_index(op.f('ix_calls_callee_number'), table_name='calls')
    op.drop_index(op.f('ix_calls_call_start'), table_name='calls')
    op.drop_index(op.f('ix_calls_at_session_id'), table_name='calls')
    op.drop_index(op.f('ix_calls_at_call_id'), table_name='calls')
    op.drop_index(op.f('ix_calls_agent_id'), table_name='calls')
    op.drop_table('calls')
    op.drop_index(op.f('ix_leads_status'), table_name='leads')
    op.drop_index(op.f('ix_leads_source'), table_name='leads')
    op.drop_index(op.f('ix_leads_priority'), table_name='leads')
    op.drop_index(op.f('ix_leads_assigned_agent_id'), table_name='leads')
    op.drop_table('leads')
    op.drop_index(op.f('ix_agents_status'), table_name='agents')
    op.drop_index(op.f('ix_agents_is_logged_in'), table_name='agents')
    op.drop_table('agents')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_status'), table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
